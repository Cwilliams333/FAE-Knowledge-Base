services:
  # The core Elasticsearch database
  elasticsearch:
    image: elasticsearch:8.9.0
    container_name: es-knowledge-base
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - knowledge-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Combined web + auto-ingest service (Flask backend)
  web:
    build: .
    container_name: kb-web
    environment:
      - ES_HOST=http://elasticsearch:9200
      - ES_USER=
      - ES_PASSWORD=
      - INDEX_NAME=knowledge_base
      - DOCUMENTS_DIR=/app/documents
      - FLASK_ENV=production
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./documents:/app/documents
    networks:
      - knowledge-net
    restart: unless-stopped
    command: bash -c "python ingest.py && gunicorn --bind 0.0.0.0:5000 --workers 4 app:app"

  # React frontend production server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: kb-frontend
    ports:
      - "5173:80"
    depends_on:
      - web
    networks:
      - knowledge-net
    restart: unless-stopped

volumes:
  es_data:
    driver: local

networks:
  knowledge-net:
    driver: bridge